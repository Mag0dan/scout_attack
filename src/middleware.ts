import { type NextRequest, NextResponse } from "next/server";
/*4. –ü—Ä–∏–º–µ—Ä

–ï—Å–ª–∏ –∫—É–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–∞–∫:

Set-Cookie: token=abc123; Secure; HttpOnly; Path=/; SameSite=Lax


–ù–∞ https://example.com/dashboard middleware —É–≤–∏–¥–∏—Ç –µ—ë.

–ù–∞ http://localhost/dashboard ‚Äî –Ω–µ —É–≤–∏–¥–∏—Ç (–∏–∑-–∑–∞ Secure).

–ù–∞ –¥—Ä—É–≥–æ–º —Å–∞–π—Ç–µ ‚Äî –Ω–µ –ø—Ä–∏–¥—ë—Ç (–∏–∑-–∑–∞ SameSite=Lax).

üí° –í—ã–≤–æ–¥: –¥–∞, —Ç—ã –º–æ–∂–µ—à—å –≤–∏–¥–µ—Ç—å —Ç–æ–∫–µ–Ω –≤ middleware –ø—Ä–∏ HTTPS, –¥–∞–∂–µ –µ—Å–ª–∏ –∫—É–∫–∞ Secure –∏ HttpOnly.*/

export default function middleware(request: NextRequest) {
  // const { cookies } = request;
  // const token = cookies.get("token")?.value;
  // const { pathname } = new URL(request.url);
  // console.log(token);

  // // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ —Ç–µ–∫—É—â–µ–≥–æ –ø—É—Ç–∏
  // if (token) {
  //   if (
  //     pathname.startsWith("/dashboard") ||
  //     pathname.startsWith("/reports") ||
  //     pathname.startsWith("/profile") ||
  //     pathname.startsWith("/emails") ||
  //     pathname.startsWith("/ssl") ||
  //     pathname.startsWith("/alike")
  //   ) {
  //     return NextResponse.next(); // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–∞—à–±–æ—Ä–¥–∞ ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
  //   }
  //   // –µ—Å–ª–∏ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω, –Ω–æ –Ω–∞ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ ‚Üí —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /dashboard
  //   return NextResponse.redirect(new URL("/dashboard", request.url));
  // } else {
  //   // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω
  //   if (pathname === "/login") {
  //     return NextResponse.next(); // –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞ ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
  //   }
  //   // –µ—Å–ª–∏ –Ω–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω –∏ –Ω–µ –Ω–∞ login ‚Üí —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ login
  //   return NextResponse.redirect(new URL("/login", request.url));
  // }
  return NextResponse.next();
}

export const config = {
  matcher: [
    "/",
    "/login",
    "/dashboard",
    "/reports",
    "/profile",
    "/emails",
    "/ssl",
    "/alike",
  ],
};
